---
- name: Registrar uptime de sistemas Linux, HPUX, AIX y Solaris
  hosts: all
  gather_facts: false
  become: false
  vars:
    uptime_dir: "./uptimes"
    uptime_dir2: "./uptimes2"
    ansible_ssh_timeout: 4    
    mysql_host: "localhost"
    mysql_user: "root"
    mysql_password: "Winner2020"
    mysql_db: "uptime"
    tabla: "registro"
    grupoadmin: "admtmx"
    controllerserver: "bastion.local.com"    

  tasks:
    - name: Definir fecha y hora actual en formato MySQL
      set_fact:
        current_time: "{{ lookup('pipe', 'date +\"%Y-%m-%d %H:%M:%S\"') }}"
      delegate_to: bastion.local.com
      run_once: true
      
    - name: Crear Registro en la DB MySQL
      delegate_to: bastion.local.com
      community.mysql.mysql_query:
        login_host: "{{ mysql_host }}"
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_db: "{{ mysql_db }}"
        query: |
          INSERT INTO `registro` (`fecha`, `hostname`) VALUES ('{{ current_time }}', '{{ inventory_hostname }}');
      when: inventory_hostname != controllerserver  

    - name: Obtener uptime en Linux
      shell: /usr/bin/awk '{print int($1 / 60)}' /proc/uptime
      register: result_linux
      ignore_errors: yes


    - name: Mostrar resultado de uptime
      debug:
        msg: "Uptime de {{ inventory_hostname }}: {{ result_linux.stdout_lines }}"
      when: result_linux is defined


    - name: Actualizar informaci√≥n general en MySQL
      delegate_to: bastion.local.com
      community.mysql.mysql_query:
        login_host: "{{ mysql_host }}"
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        login_db: "{{ mysql_db }}"
        query: |
          UPDATE registro
          SET
            `uptime` = '{{ result_linux.stdout_lines[0] }}'
          WHERE `fecha` = '{{ current_time }}'
            AND `hostname` = '{{ inventory_hostname }}';
      when: inventory_hostname != controllerserver
